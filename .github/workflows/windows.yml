name: Windows
on:
  push:
    branches: [ "master" ]
    paths:
      - DLLInjector/*
      - InternetGamesClientDLL/*
      - InternetGamesServer/*
  pull_request:
    branches: [ "master" ]
    paths:
      - DLLInjector/*
      - InternetGamesClientDLL/*
      - InternetGamesServer/*
  workflow_dispatch:

jobs:
  windows:
    strategy:
      matrix:
        arch: [ x64, x86 ]
        build_type: [ Debug, Release ]

    runs-on: windows-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: true

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Install v141_xp toolset
        shell: powershell
        run: |
          $ErrorActionPreference = "Stop"
          $installer = "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vs_installer.exe"
          Write-Host "Using existing VS2022 installer at: $installer"
          
          & $installer modify `
            --installPath "C:\Program Files\Microsoft Visual Studio\2022\Enterprise" `
            --add Microsoft.VisualStudio.Component.VC.v141.xp `
            --quiet --wait --norestart

      - name: Verify MSVC toolsets
        run: |
          dir "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC"
          cl.exe /?

      - name: Build
        env:
          ARCH: ${{ matrix.arch }}
          BUILD_TYPE: ${{ matrix.build_type }}
        run: |
          msbuild ZoneInternetGamesServer.sln /p:Configuration=$Env:BUILD_TYPE /p:Platform=$Env:ARCH

      - name: Package
        uses: actions/upload-artifact@v4
        with:
          name: "ZoneInternetGamesServer-Windows-${{ matrix.arch }}-${{ matrix.build_type }}-${{ github.sha }}-binaries"
          path: "${{ (matrix.arch == 'x64' && 'x64/') || '' }}${{ matrix.build_type }}"
